java集合：
	数组一旦初始化，长度就不能改变。链表长度可以改变，可以动态的增加节点数据，操作比较灵活；
	数组是可以有一维二维三维。。。属于非线性结构，链表是线性结构；
	数组访问元素依靠下角标，比如查找第n是数据，直接arr[n-1](数组下角标从0开始)，时间复杂度是O(1)。
	链表访问元素得从头开始依次查找，根据引用找到下一个节点，时间复杂度是O(n)；
	数组插入删除中间数据比较麻烦，时间复杂度是O(n)。链表插入删除比较方便，时间复杂度是O(1)；
	所以如果需要快速访问数据并且涉及很少插入删除操作那么就选用数组。如果涉及比较多的删除插入那么选用链表；
	数组在栈内存中存储引用，在堆内存中存储对象。链表存储在堆内存中，由于存储在堆内存中，需要手动分配内存；
	数组在内存中是连续存储的，链表不是连续的。

	List:有顺序的(存入和取出的顺序一致)，元素可以重复
		ArrayList：底层用数组  
			特点：查询效率高，增删效率低 轻量级 线程不安全    
		LinkedList：底层用双向循环链表   
			特点：查询效率低，增删效率高   	  
		Vector: 底层用数组   
			特点：重量级，占据更多的系统开销 线程安全  
			
	Set：无顺序的(存入和取出的顺序不一定一致)，元素不可重复 唯一性保证：hashCode()方法和equal()方法
		HashSet：底层结构是哈希表  
			特点：查询效率高，增删效率低 轻量级 线程不安全
		LinkedHashSet：底层结构是哈希表(有序)  
			特点：查询效率高，增删效率低 轻量级 线程不安全
		TreeSet：底层是二叉树  
			特点：排序规则，compareTo方法
			
	Map：元素是键值对 key：唯一，不可重复 value：可重复
		HashMap:底层结构是哈希表 
			特点：轻量级 线程不安全 允许key或者value是null
		LinkedHashMap:底层结构是哈希表(有序)
			特点：轻量级 线程不安全 允许key或者value是null 		
		Hashtable：底层结构是哈希表 
			特点：重量级 线程安全 不允许key或者value是null   
		TreeMap：底层是二叉树
			特点：元素自动对key排序,排序规则，compareTo方法